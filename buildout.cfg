[buildout]

extensions = mr.developer
dump-picked-versions-file = versions-picked.cfg

extends = http://dist.plone.org/release/4.3.9/versions.cfg
    versions.cfg

index = http://devpi.imio.be/root/imio/+simple
parts =
    instance
    test
    code-analysis
    releaser
    i18ndude
    omelette
    translation
    createcoverage

allow-hosts =
    *.python.org
    *.plone.org
    *.zope.org
    *labix.org
    *imio.be

find-links =
    http://dist.plone.org/release/4.3.9
    http://dist.plone.org/thirdparty

sources = sources
sources-dir = devel

develop = .

eggs +=
    Plone
    Pillow
    imio.config.vocabulary [test]
    ipdb

[sources]


[instance]
recipe = plone.recipe.zope2instance
user = admin:admin
http-address = 8080
eggs = ${buildout:eggs}
environment-vars =
  zope_i18n_compile_mo_files true


[code-analysis]
recipe = plone.recipe.codeanalysis
directory = ${buildout:directory}/src/imio
flake8-exclude = bootstrap.py,bootstrap-buildout.py,docs,*.egg.,omelette
flake8-max-complexity = 15
flake8-extensions =
    flake8-blind-except
    flake8-debugger
    flake8-coding


[omelette]
recipe = collective.recipe.omelette
eggs = ${buildout:eggs}


[translation]
recipe = infrae.i18nextract
packages = imio.config.vocabulary
output = ${buildout:directory}/src/imio/config.vocabulary/locales
output-package = imio.config.vocabulary
domain = imio.config.vocabulary

[testenv]
zope_i18n_compile_mo_files = true

[test]
recipe = zc.recipe.testrunner
eggs = ${buildout:eggs}
defaults = ['-s', 'imio.config.vocabulary', '--auto-color', '--auto-progress']
environment = testenv


[createcoverage]
recipe = zc.recipe.egg
eggs = createcoverage


[robot]
recipe = zc.recipe.egg
eggs =
    ${test:eggs}
    plone.app.robotframework[debug,ride,reload]


[releaser]
recipe = zc.recipe.egg
eggs = zest.releaser


[i18ndude]
recipe = zc.recipe.egg
eggs = i18ndude
